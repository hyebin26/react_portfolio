{"version":3,"sources":["component/greet/greet.jsx","component/nav/nav.jsx","component/socialIcon/socialIcon.jsx","component/project/project.jsx","component/about/about.jsx","component/contact/contact.jsx","App.js","index.js"],"names":["GreetWrapper","styled","section","TextContainer","div","ImgContainer","GreetImg","img","Text","h1","ThumbImg","Greet","props","name","className","src","alt","NavWrapper","NavUl","ul","NavList","li","Nav","to","smooth","spy","offset","duration","SocialWrapper","SocialLink","a","SocialUl","SocialList","SoclaiTitle","p","SocialIcon","href","gsap","registerPlugin","ScrollTrigger","data","title","content","link","sourceLink","ProjectWrapper","ProjectUl","ProjectLi","ProjectImg","ProjectImgBox","ProjectTextBox","Title","h2","Content","Link","Category","Span","span","TextSmallBox","Project","ulRef","useRef","listRef","useEffect","element","current","totalLength","length","saveStyles","matchMedia","xPercent","ease","scrollTrigger","trigger","pin","scrub","snap","end","offsetWidth","map","el","index","from","opacity","y","start","toggleActions","all","backgroundColor","fromTo","display","ref","item","e","createLinetRefs","AboutWrapper","AboutContent","AboutTitle","AboutContainer","AboutTextStrong","strong","AboutBox","AboutEmoziBox","AboutEmozi","AboutEmoziText","AboutText","About","aboutWrapperRef","wrapperCurrent","x","ContactWrapper","ContactText","textColor","three","one","two","ContactLink","ContactBox","ContactSocialBox","ContactSocial","ContactSocialLink","Contact","contactRef","wrapperRef","addRefs","stagger","GlobalStyle","createGlobalStyle","Wrapper","SocialContainer","ContentContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b8e79be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst GreetWrapper = styled.section`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n`;\r\nconst TextContainer = styled.div`\r\n  flex: 1 0 55%;\r\n  font-family: \"Gowun Dodum\", sans-serif;\r\n`;\r\nconst ImgContainer = styled.div`\r\n  flex: 1 0 45%;\r\n  @media only screen and (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst GreetImg = styled.img`\r\n  width: 250px;\r\n`;\r\nconst Text = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  &:hover .greetImg {\r\n    transform: scale(1.3);\r\n  }\r\n`;\r\nconst ThumbImg = styled.img`\r\n  width: 35px;\r\n`;\r\n\r\nconst Greet = (props) => {\r\n  return (\r\n    <Element name=\"home\">\r\n      <GreetWrapper>\r\n        <TextContainer>\r\n          <Text>안녕하세요.</Text>\r\n          <Text>저는 프론트엔드 개발자 황혜빈이라고 합니다.</Text>\r\n          <Text>\r\n            웹을 개발하고 배포하면서 프론트엔드에 대해 공부하고있습니다.\r\n          </Text>\r\n          <Text>\r\n            페이지에 방문해주셔서 감사합니다.\r\n            <ThumbImg\r\n              className=\"greetImg\"\r\n              src=\"./img/thumb.png\"\r\n              alt=\"thumbs up\"\r\n            />\r\n          </Text>\r\n        </TextContainer>\r\n        <ImgContainer>\r\n          <GreetImg src=\"./img/me.jpg\" alt=\"hyebin\" />\r\n        </ImgContainer>\r\n      </GreetWrapper>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default Greet;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst NavWrapper = styled.section`\r\n  padding: 0 2rem;\r\n`;\r\nconst NavUl = styled.ul`\r\n  display: flex;\r\n`;\r\nconst NavList = styled.li`\r\n  padding: 1.5rem 0;\r\n  padding-right: 4rem;\r\n  & {\r\n    cursor: pointer;\r\n    color: black;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: #00eb7f;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <NavWrapper>\r\n      <NavUl>\r\n        <NavList>\r\n          <Link to=\"home\" smooth={true} spy={true} offset={-65}>\r\n            Home\r\n          </Link>\r\n        </NavList>\r\n        <NavList>\r\n          <Link to=\"project\" smooth={true} spy={true}>\r\n            Project\r\n          </Link>\r\n        </NavList>\r\n        <NavList>\r\n          <Link to=\"about\" smooth={true} spy={true} duration={1000}>\r\n            About me\r\n          </Link>\r\n        </NavList>\r\n        <NavList>\r\n          <Link to=\"contact\" smooth={true} spy={true} duration={1500}>\r\n            Contact\r\n          </Link>\r\n        </NavList>\r\n      </NavUl>\r\n    </NavWrapper>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { SiNotion } from \"react-icons/si\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst SocialWrapper = styled.section`\r\n  .logo {\r\n    position: fixed;\r\n    font-size: 1.5rem;\r\n    top: 20px;\r\n    left: 30px;\r\n    color: #e0dfd5;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .logo {\r\n      left: 15px;\r\n      font-size: 1.1rem;\r\n    }\r\n  }\r\n`;\r\nconst SocialLink = styled.a`\r\n  display: block;\r\n  transition: 0.3s;\r\n  color: #e0dfd5;\r\n  &:hover {\r\n    color: #00eb7f;\r\n  }\r\n`;\r\n\r\nconst SocialUl = styled.ul`\r\n  position: fixed;\r\n  bottom: 50px;\r\n  text-align: center;\r\n  left: 30px;\r\n  @media only screen and (max-width: 600px) {\r\n    left: 15px;\r\n  }\r\n`;\r\nconst SocialList = styled.li`\r\n  padding-top: 0.8rem;\r\n`;\r\nconst SoclaiTitle = styled.p`\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst SocialIcon = (props) => {\r\n  return (\r\n    <SocialWrapper className=\"socialBox\">\r\n      <Link\r\n        to=\"home\"\r\n        className=\"logo\"\r\n        smooth={true}\r\n        spy={true}\r\n        duration={1000}\r\n        offset={-1000}\r\n      >\r\n        Hyebin\r\n      </Link>\r\n      <SocialUl>\r\n        <SocialList>\r\n          <SocialLink href=\"https://github.com/hyebin26\">\r\n            <AiFillGithub className=\"git\" />\r\n            <SoclaiTitle>Github</SoclaiTitle>\r\n          </SocialLink>\r\n        </SocialList>\r\n        <SocialList>\r\n          <SocialLink href=\"https://faint-vacuum-1d5.notion.site/801dea06859546f88c55fb963d7bc548\">\r\n            <SiNotion />\r\n            <SoclaiTitle>Notion</SoclaiTitle>\r\n          </SocialLink>\r\n        </SocialList>\r\n      </SocialUl>\r\n    </SocialWrapper>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { Element } from \"react-scroll\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst data = [\r\n  {\r\n    title: \"Hotel Page Clone Coding\",\r\n    content:\r\n      \"템플릿을 참고해서 만든 클론코딩 홈페이지입니다. Scss, 바닐라 자바스크립트, HTML을 사용했습니다. 페이지는 HOME, PROPERTY, PAGES 3페이지를 구현했습니다. 바닐라 자바스크립트로 이미지 슬라이더, 비디오 팝업, 햄버거 내비게이션, 썸네일 이미지 등을 구현하였습니다. 또한 PROPERTY페이지에서는 Google Maps API를 사용해서 지도를 구현했습니다.\",\r\n    link: \"https://hyebin26.github.io/clone_coding/\",\r\n    sourceLink: \"https://github.com/hyebin26/clone_coding\",\r\n    img: \"./img/hotel.gif\",\r\n  },\r\n  {\r\n    title: \"Review Page\",\r\n    content:\r\n      \"영화와 독서의 기록을 남기기 위해 만든 게시판 형식의 페이지 입니다. NodeJs, Express, Mysql, 바닐라 자바스크립트를 이용해서 만들었습니다. 게시글, 로그인, 회원가입 등은 mysql을 이용해서 구현하였습니다. 그리고 검색 기능, 페이지네이션, 댓글, 게시글 수정 등을 여러가지를 구현하였습니다. 또한 Cloudynary API를 통해 이미지를 업로드하는 기능을 추가했습니다. 서버는 Express를 사용해서 heroku에 배포하였고 웹 또한 heroku에 배포하였습니다. * 페이지를 오래 방문하지 않을 시 서버가 잠기므로 새로고침을 누르고 잠시만 기다려주세요! *\",\r\n    link: \"https://review-vanillajs.herokuapp.com/\",\r\n    sourceLink: \"https://github.com/hyebin26/vanillaJs_review\",\r\n    img: \"./img/review.gif\",\r\n  },\r\n  {\r\n    title: \"Diet Calendar\",\r\n    content:\r\n      \"다이어트를 할 때 자신의 키와 몸무게에 따른 권장 칼로리를 계산하고 그 권장 칼로리에 따른 결과를 기록하고 싶어서 만들었습니다. 로그인은 firebase로 구현하였고 database 또한 firebase realtime DB를 사용했습니다. 칼로리를 계산하는 페이지에서는 자신의 신체정보를 입력하면 그에 알맞은 권장 칼로리가 측정됩니다. 또한 메인페이지에서 캘린더는 바닐라 자바스크립트로 구현하였고 날마다 칼로리를 기록할 수 있으며, 권장 칼로리를 기준으로 더 많이 섭취할 경우 칼로리를 표시하는 색을 빨간색으로 표시하게 했습니다.\",\r\n    link: \"https://hyebin26.github.io/react-dietCalendar/\",\r\n    sourceLink: \"https://github.com/hyebin26/react-dietCalendar\",\r\n    img: \"./img/calendar.gif\",\r\n  },\r\n  {\r\n    title: \"StockGame\",\r\n    content:\r\n      \"간단하게 할 수 있는 모의주식 게임입니다. 로그인은 firebase, Database는 firebase realtime database를 사용했습니다. 상태관리를 간편하게 하기 위해 reudx-toolkit을 사용하였고 차트는 chart.js를 사용해서 구현했습니다. 메인페이지에서 주식을 판매, 구매 할 수 있고 NextDay 버튼을 누르면 일정한 확률에 맞게 가격이 변동되고 다음 날로 넘어가게 됩니다. 또한 Reset 버튼을 누르면 첫 번째 날로 리셋할 수 있습니다. 또한 Hint 버튼을 누르면 다음 날의 가격 변동의 단서가 되는 힌트를 확인 할 수 있습니다. 투자내역에서는 소유 주식, 힌트 저장소에서는 소유 힌트를 확인할 수 있습니다.\",\r\n    link: \"https://hyebin26.github.io/react_stockgame/\",\r\n    sourceLink: \"https://github.com/hyebin26/react_stockgame\",\r\n    img: \"./img/stockgame.gif\",\r\n  },\r\n];\r\n\r\nconst ProjectWrapper = styled.section`\r\n  position: relative;\r\n`;\r\nconst ProjectUl = styled.ul`\r\n  width: 400%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  overflow: hidden;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n`;\r\nconst ProjectLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 8rem 2rem;\r\n  color: #e0dfd5;\r\n  @media only screen and (max-width: 1024px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst ProjectImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ProjectImgBox = styled.div`\r\n  display: flex;\r\n  flex: 1 0 55%;\r\n  border-radius: 1% 0 0 1%;\r\n`;\r\nconst ProjectTextBox = styled.div`\r\n  flex: 1 0 45%;\r\n  border-radius: 0 1% 1% 0;\r\n  font-family: \"Gowun Dodum\", sans-serif;\r\n  font-size: 1rem;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 1.5rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding-left: 0;\r\n    padding-top: 1.5rem;\r\n  }\r\n`;\r\nconst Title = styled.h2`\r\n  color: white;\r\n  text-transform: uppercase;\r\n`;\r\nconst Content = styled.p`\r\n  padding-top: 1.5rem;\r\n  color: #e0dfd5;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding-top: 0rem;\r\n  }\r\n`;\r\nconst Link = styled.a`\r\n  text-decoration: underline;\r\n  color: #e0dfd5;\r\n  &:hover {\r\n    color: #00eb7f;\r\n  }\r\n`;\r\nconst Category = styled.h1`\r\n  font-size: 2.2rem;\r\n  position: absolute;\r\n  top: 3rem;\r\n  left: 2rem;\r\n  color: #00eb7f;\r\n`;\r\nconst Span = styled.span``;\r\nconst TextSmallBox = styled.div`\r\n  ${(props) => (props.link ? \"margin-top:auto;\" : \"\")}\r\n  @media only screen and (max-width: 1024px) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\nconst Project = (props) => {\r\n  const ulRef = useRef(null);\r\n  const listRef = useRef([]);\r\n\r\n  const createLinetRefs = (el, index) => {\r\n    listRef.current[index] = el;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = ulRef.current;\r\n    const totalLength = listRef.current.length;\r\n    ScrollTrigger.saveStyles([element, listRef.current]);\r\n    ScrollTrigger.matchMedia({\r\n      \"(min-width: 1025px)\": function () {\r\n        gsap.to(listRef.current, {\r\n          xPercent: -100 * (totalLength - 1),\r\n          ease: \"none\",\r\n          duration: 0.1,\r\n          scrollTrigger: {\r\n            trigger: element,\r\n            pin: true,\r\n            scrub: 1,\r\n            snap: 1 / (totalLength - 1),\r\n            end: () => \"+=\" + element.offsetWidth,\r\n          },\r\n        });\r\n        listRef.current.map((el, index) => {\r\n          gsap.from(el, {\r\n            duration: 1,\r\n            opacity: 0,\r\n            y: 130,\r\n            scrollTrigger: {\r\n              trigger: element,\r\n              start: \"center bottom-=100\",\r\n              toggleActions: \"play none none reverse\",\r\n            },\r\n          });\r\n          return null;\r\n        });\r\n      },\r\n      \"(max-width:1025px)\": function () {\r\n        listRef.current.map((el, index) => {\r\n          gsap.from(el, {\r\n            duration: 1,\r\n            opacity: 0,\r\n            y: 130,\r\n            scrollTrigger: {\r\n              trigger: el,\r\n              start: \"top top+=130\",\r\n              toggleActions: \"play none none reverse\",\r\n            },\r\n          });\r\n          return null;\r\n        });\r\n      },\r\n      all: function () {\r\n        listRef.current.map((el, index) => {\r\n          gsap.to(\"body\", {\r\n            scrollTrigger: {\r\n              trigger: element,\r\n              start: \"top center+=100\",\r\n              toggleActions: \"play none none reverse\",\r\n            },\r\n            backgroundColor: \"#222831\",\r\n          });\r\n          return null;\r\n        });\r\n        listRef.current.map((el, index) => {\r\n          gsap.fromTo(\r\n            \".socialBox\",\r\n            { display: \"none\" },\r\n            {\r\n              scrollTrigger: {\r\n                trigger: element,\r\n                start: \"top center+=100\",\r\n                toggleActions: \"play none none reverse\",\r\n              },\r\n              duration: 0.1,\r\n              display: \"block\",\r\n            }\r\n          );\r\n          return null;\r\n        });\r\n      },\r\n    });\r\n  }, [ulRef, listRef]);\r\n\r\n  return (\r\n    <Element name=\"project\">\r\n      <ProjectWrapper>\r\n        <ProjectUl ref={ulRef} className=\"itemBox\">\r\n          <Category>PROJECT</Category>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <ProjectLi\r\n                ref={(e) => createLinetRefs(e, index)}\r\n                className=\"project1\"\r\n                key={index}\r\n              >\r\n                <ProjectImgBox>\r\n                  <ProjectImg src={item.img} />\r\n                </ProjectImgBox>\r\n                <ProjectTextBox>\r\n                  <Title>{item.title}</Title>\r\n                  <Content>{item.content}</Content>\r\n                  <TextSmallBox link>\r\n                    <Span>Link: </Span>\r\n                    <Link href={item.link}>{item.link}</Link>\r\n                  </TextSmallBox>\r\n                  <TextSmallBox>\r\n                    <Span>Source Link: </Span>\r\n                    <Link href={item.sourceLink}>{item.sourceLink}</Link>\r\n                  </TextSmallBox>\r\n                </ProjectTextBox>\r\n              </ProjectLi>\r\n            );\r\n          })}\r\n        </ProjectUl>\r\n      </ProjectWrapper>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gsap } from \"gsap\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst AboutWrapper = styled.section`\r\n  max-width: 60rem;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 3rem;\r\n  overflow: visible;\r\n`;\r\nconst AboutContent = styled.div`\r\n  font-family: \"Gowun Dodum\", sans-serif;\r\n`;\r\nconst AboutTitle = styled.h1`\r\n  color: #00eb7f;\r\n  font-size: 2.2rem;\r\n  text-align: center;\r\n  @media only screen and (max-width: 800px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\nconst AboutContainer = styled.div`\r\n  background: white;\r\n  padding: 4rem 9rem;\r\n  border-radius: 0.3%;\r\n  font-size: 1.3rem;\r\n  border-radius: 2rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1.1rem;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    padding: 4rem 2rem;\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\nconst AboutTextStrong = styled.strong`\r\n  background: linear-gradient(to right, #00eb7f 0%, #330867 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\nconst AboutBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  padding: 1rem 0;\r\n  overflow: visible;\r\n`;\r\n\r\nconst AboutEmoziBox = styled.div`\r\n  width: 10rem;\r\n  height: 10rem;\r\n  background: #00eb7f;\r\n  font-size: 5rem;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: visible;\r\n`;\r\nconst AboutEmozi = styled.p`\r\n  overflow: hidden;\r\n`;\r\nconst AboutEmoziText = styled.p`\r\n  font-size: 1.2rem;\r\n  background: rgb(57, 62, 70);\r\n  padding: 0 0.8rem;\r\n  color: white;\r\n  border: 1px solid white;\r\n`;\r\nconst AboutText = styled.p``;\r\n\r\nconst About = (props) => {\r\n  const aboutWrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const wrapperCurrent = aboutWrapperRef.current;\r\n    gsap.from(wrapperCurrent, {\r\n      opacity: 0,\r\n      x: 250,\r\n      ease: \"power4.out\",\r\n      duration: 1.5,\r\n      scrollTrigger: {\r\n        trigger: wrapperCurrent,\r\n        start: \"center bottom\",\r\n        toggleActions: \"play none none reverse\",\r\n      },\r\n    });\r\n  }, [aboutWrapperRef]);\r\n  return (\r\n    <Element name=\"about\">\r\n      <AboutWrapper ref={aboutWrapperRef}>\r\n        <AboutContainer>\r\n          <AboutTitle>ABOUT ME</AboutTitle>\r\n          <AboutBox>\r\n            <AboutEmoziBox>\r\n              <AboutEmozi>👨</AboutEmozi>\r\n              <AboutEmoziText>Developer</AboutEmoziText>\r\n            </AboutEmoziBox>\r\n          </AboutBox>\r\n          <AboutContent>\r\n            <AboutText>안녕하세요! 😁</AboutText>\r\n            <AboutText>\r\n              <AboutTextStrong>Frontend</AboutTextStrong>에 대해서 공부하고 있는\r\n              주니어 개발자 황혜빈입니다.\r\n            </AboutText>\r\n            <AboutText>\r\n              <AboutTextStrong>Javascript, React</AboutTextStrong>를 공부면서\r\n              반응형 웹사이트, 웹 에플리케이션을 개발하면서 사용자 중심적으로\r\n              생각하고 더 좋은 앱을 만들기 위해 노력하고 있습니다.\r\n            </AboutText>\r\n            <AboutText>\r\n              새로운 프로젝트를 진행하면서 기존에 알고 있는 라이브러리가 아닌\r\n              프로젝트에 필요한 새로운 라이브러리를 도입하려고 노력했으며 새로운\r\n              지식을 배우는 것에 대한 관심이 많습니다.\r\n            </AboutText>\r\n            <AboutText>\r\n              그리고 웹을 스스로 배포하면서 웹에 대해서 이해하기 위해\r\n              노력하였습니다. 또한 백엔드에도 관심을 가지고 서버도 배포하는 등\r\n              개발 전반적으로 이해를 하기 위해 노력하고 있습니다.\r\n            </AboutText>\r\n          </AboutContent>\r\n        </AboutContainer>\r\n      </AboutWrapper>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { SiNotion } from \"react-icons/si\";\r\nimport { gsap } from \"gsap\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nconst ContactWrapper = styled.section`\r\n  height: 100vh;\r\n  padding: 0 2rem;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\nconst ContactText = styled.h1`\r\n  color: ${(props) => props.textColor || \"white\"};\r\n  -webkit-text-stroke: ${(props) => (props.three ? \"1px dimgrey;\" : \"none\")};\r\n    font-size:${(props) =>\r\n      props.one ? \"5rem;\" : props.two ? \"3.5rem;\" : \"9rem;\"};\r\n    text-align:center;\r\n    z-index: ${(props) => (props.three ? \"-1;\" : \"0\")}\r\n    margin-top: ${(props) => (props.three ? \"-150px\" : \"0\")};\r\n    @media only screen and (max-width: 800px) {\r\n      font-size:${(props) =>\r\n        props.one ? \"3rem;\" : props.two ? \"2rem;\" : \"6rem;\"};\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n      font-size:${(props) =>\r\n        props.one ? \"2rem;\" : props.two ? \"2.5rem;\" : \"5rem;\"};\r\n        margin-top: ${(props) => (props.three ? \"-90px\" : \"0\")};\r\n    }\r\n}\r\n`;\r\nconst ContactLink = styled.a`\r\n  color: #00eb7f;\r\n  font-size: 1.2rem;\r\n  border: 1px solid #00eb7f;\r\n  border-left: none;\r\n  border-right: none;\r\n  padding: 0 0.3rem;\r\n  &:hover {\r\n    color: white;\r\n    background: #00eb7f;\r\n  }\r\n`;\r\nconst ContactBox = styled.div`\r\n  text-align: center;\r\n  overflow: visible;\r\n  margin-top: -40px;\r\n  @media only screen and (max-width: 800px) {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\nconst ContactSocialBox = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n`;\r\nconst ContactSocial = styled.li`\r\n  margin: 0 1rem;\r\n`;\r\nconst ContactSocialLink = styled.a`\r\n  color: white;\r\n  &:hover {\r\n    color: #00eb7f;\r\n  }\r\n`;\r\n\r\nconst Contact = (props) => {\r\n  const contactRef = useRef([]);\r\n  const wrapperRef = useRef(null);\r\n  const addRefs = (el, index) => {\r\n    contactRef.current[index] = el;\r\n  };\r\n  useEffect(() => {\r\n    gsap.from(contactRef.current, {\r\n      opacity: 0,\r\n      stagger: 0.8,\r\n      y: 50,\r\n      scrollTrigger: {\r\n        trigger: wrapperRef.current,\r\n        start: \"bottom bottom+=100\",\r\n        toggleActions: \"play none none reverse\",\r\n      },\r\n    });\r\n  }, [contactRef]);\r\n  return (\r\n    <Element name=\"contact\">\r\n      <ContactWrapper ref={wrapperRef}>\r\n        <ContactText one ref={(e) => addRefs(e, 0)}>\r\n          MINDING A PROJECT?\r\n        </ContactText>\r\n        <ContactText textColor=\"#00eb7f\" two ref={(e) => addRefs(e, 1)}>\r\n          LET'S TALK\r\n        </ContactText>\r\n        <ContactText textColor=\"#222831\" three>\r\n          HIRE ME\r\n        </ContactText>\r\n        <ContactBox ref={(e) => addRefs(e, 2)}>\r\n          <ContactLink href=\"mailto:sksp4334@naver.com\">\r\n            sksp4334@naver.com\r\n          </ContactLink>\r\n        </ContactBox>\r\n        <ContactSocialBox ref={(e) => addRefs(e, 3)}>\r\n          <ContactSocial>\r\n            <ContactSocialLink href=\"mailto:sksp4334@naver.com\">\r\n              <HiOutlineMail />\r\n            </ContactSocialLink>\r\n          </ContactSocial>\r\n          <ContactSocial>\r\n            <ContactSocialLink href=\"https://github.com/orgs/hyebin26\">\r\n              <AiFillGithub />\r\n            </ContactSocialLink>\r\n          </ContactSocial>\r\n          <ContactSocial>\r\n            <ContactSocialLink href=\"https://faint-vacuum-1d5.notion.site/801dea06859546f88c55fb963d7bc548\">\r\n              <SiNotion />\r\n            </ContactSocialLink>\r\n          </ContactSocial>\r\n        </ContactSocialBox>\r\n      </ContactWrapper>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import \"./App.css\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Greet from \"./component/greet/greet\";\nimport Nav from \"./component/nav/nav\";\nimport SocialIcon from \"./component/socialIcon/socialIcon\";\nimport Project from \"./component/project/project\";\nimport About from \"./component/about/about\";\nimport Contact from \"./component/contact/contact\";\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    padding:0;\n    margin:0;\n    box-sizing:border-box;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      width: 12px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: black; \n      border-radius: 2px;\n    };\n    ::selection{\n      background:#00eb7f;\n      color:white;\n    } \n  }\n  body{\n    font-family: 'Otomanopee One', sans-serif ;\n  } \n  a{\n    text-decoration:none;\n  }\n  li{\n    list-style:none;\n  }\n  svg{\n    font-size: 2rem;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\nconst SocialContainer = styled.div`\n  flex: 1 0 10%;\n`;\nconst ContentContainer = styled.div`\n  flex: 1 0 90%;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <SocialContainer>\n        <SocialIcon />\n      </SocialContainer>\n      <ContentContainer>\n        <Nav />\n        <Greet />\n        <Project />\n        <About />\n        <Contact />\n      </ContentContainer>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}